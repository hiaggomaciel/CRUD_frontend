{"ast":null,"code":"var _jsxFileName = \"/home/hiaggomaciel/Documentos/CRUD_frontend/src/paginas/UploadImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Button, MenuItem, TextField } from \"@mui/material\";\nimport { Box, Container, Stack } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [image, setImage] = useState(\"\");\n  const [nameImage, setNameImage] = useState(\"\");\n  const [idUserSelect, setIdUserSelect] = useState(\"\");\n\n  //// Puxando os Usuários da API ////\n  useEffect(() => {\n    async function loadUsers() {\n      const response = await api.get(\"users/\");\n      setUsers(response.data.results);\n    }\n    loadUsers();\n  }, []);\n  const usersSelect = users === null || users === void 0 ? void 0 : users.map((item, index) => {\n    return {\n      value: item.id,\n      label: item.nomeCompleto\n    };\n  });\n\n  //// Transformando os dados da API ////\n  const data = {\n    name: nameImage,\n    user: idUserSelect\n  };\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"data\", JSON.stringify(data));\n\n  //// Declaração para envio dos dados ////\n  const testFetch = async () => {\n    console.log(data);\n    const response = await fetch(`http://127.0.0.1:8000/users/${idUserSelect}/images/uploadfiles/`, {\n      method: \"POST\",\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n      body: formData\n    }).then(async res => {\n      await res.json();\n    }).then(users => {\n      console.log(users);\n    }).catch(error => console.log(error));\n    console.log(response);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: nameImage,\n        onChange: event => {\n          setNameImage(event.target.value);\n        },\n        id: \"nameImage\",\n        name: \"nameImage\",\n        label: \"Digite o nome da sua imagem\",\n        type: \"nameImage\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        id: \"outlined-select-currency\",\n        select: true,\n        fullWidth: true,\n        label: \"Usu\\xE1rio\",\n        value: idUserSelect,\n        onChange: event => {\n          setIdUserSelect(event.target.value);\n        },\n        helperText: \"Escolha sua imagem\",\n        children: usersSelect.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        direction: \"row\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        justifyItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          type: \"file\",\n          onChange: event => {\n            setImage(event.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"large\",\n          variant: \"contained\",\n          component: \"label\",\n          onClick: testFetch,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"0ZDoEGs7nJocGP5AV5jITnXtwv0=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useEffect","Button","MenuItem","TextField","Box","Container","Stack","useState","api","ImageUpload","users","setUsers","image","setImage","nameImage","setNameImage","idUserSelect","setIdUserSelect","loadUsers","response","get","data","results","usersSelect","map","item","index","value","id","label","nomeCompleto","name","user","formData","FormData","append","JSON","stringify","testFetch","console","log","fetch","method","headers","body","then","res","json","catch","error","event","target","option","files"],"sources":["/home/hiaggomaciel/Documentos/CRUD_frontend/src/paginas/UploadImage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, MenuItem, TextField } from \"@mui/material\";\nimport { Box, Container, Stack } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { api } from \"../services/api\";\n\nconst ImageUpload = () => {\n  const [users, setUsers] = useState([]);\n  const [image, setImage] = useState(\"\");\n  const [nameImage, setNameImage] = useState(\"\");\n  const [idUserSelect, setIdUserSelect] = useState(\"\");\n\n  //// Puxando os Usuários da API ////\n  useEffect(() => {\n    async function loadUsers() {\n      const response = await api.get(\"users/\");\n      setUsers(response.data.results);\n    }\n    loadUsers();\n  }, []);\n\n  const usersSelect = users?.map((item, index) => {\n    return { value: item.id, label: item.nomeCompleto };\n  });\n\n  //// Transformando os dados da API ////\n  const data = { name: nameImage, user: idUserSelect };\n  const formData = new FormData();\n  formData.append(\"image\", image);\n  formData.append(\"data\", JSON.stringify(data));\n\n  //// Declaração para envio dos dados ////\n  const testFetch = async () => {\n    console.log(data);\n    const response = await fetch(\n      `http://127.0.0.1:8000/users/${idUserSelect}/images/uploadfiles/`,\n      {\n        method: \"POST\",\n        headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n        body: formData,\n      }\n    )\n      .then(async (res) => {\n        await res.json();\n      })\n      .then((users) => {\n        console.log(users);\n      })\n      .catch((error) => console.log(error));\n    console.log(response);\n  };\n\n  return (\n    <Container>\n      <Box component=\"form\">\n        <TextField\n          value={nameImage}\n          onChange={(event) => {\n            setNameImage(event.target.value);\n          }}\n          id=\"nameImage\"\n          name=\"nameImage\"\n          label=\"Digite o nome da sua imagem\"\n          type=\"nameImage\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          required\n        ></TextField>\n\n        <TextField\n          variant=\"outlined\"\n          id=\"outlined-select-currency\"\n          select\n          fullWidth\n          label=\"Usuário\"\n          value={idUserSelect}\n          onChange={(event) => {\n            setIdUserSelect(event.target.value);\n          }}\n          helperText=\"Escolha sua imagem\"\n        >\n          {usersSelect.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <Stack\n          spacing={5}\n          direction=\"row\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          justifyContent=\"center\"\n          justifyItems=\"center\"\n        >\n          <TextField\n            fullWidth\n            required\n            type=\"file\"\n            onChange={(event) => {\n              setImage(event.target.files[0]);\n            }}\n          ></TextField>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            component=\"label\"\n            onClick={testFetch}\n          >\n            Enviar\n          </Button>\n        </Stack>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}